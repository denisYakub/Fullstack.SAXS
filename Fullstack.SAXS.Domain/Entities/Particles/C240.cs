using Fullstack.SAXS.Domain.Enums;
using Fullstack.SAXS.Domain.ValueObjects;

namespace Fullstack.SAXS.Domain.Entities.Particles
{
    public class C240 : Particle
    {
        public override double OuterSphereRadius => _outerR;

        public override double InnerSphereRadius => _innerR;

        public override IReadOnlyCollection<Vector3D> Vertices => _vertices;

        public override ParticleTypes ParticleType => ParticleTypes.C240;

        protected override int[][] Faces => _faces;

        private readonly double _outerR;
        private readonly double _innerR;
        private Vector3D[] _vertices;

        private static readonly int[][] _faces = [
            [0, 200, 1, 4],
            [1, 205, 0, 2],
            [2, 214, 3, 1],
            [3, 210, 2, 4],
            [4, 206, 3, 0],
            [5, 234, 9, 6],
            [6, 202, 7, 5],
            [7, 201, 8, 6],
            [8, 209, 9, 7],
            [9, 236, 8, 5],
            [10, 230, 14, 11],
            [11, 218, 10, 12],
            [12, 204, 13, 11],
            [13, 203, 14, 12],
            [14, 232, 13, 10],
            [15, 226, 19, 16],
            [16, 216, 17, 15],
            [17, 215, 18, 16],
            [18, 219, 17, 19],
            [19, 228, 18, 15],
            [20, 220, 24, 21],
            [21, 212, 22, 20],
            [22, 211, 23, 21],
            [23, 217, 24, 22],
            [24, 224, 23, 20],
            [25, 238, 26, 29],
            [26, 208, 27, 25],
            [27, 207, 26, 28],
            [28, 213, 27, 29],
            [29, 223, 28, 25],
            [30, 194, 31, 34],
            [31, 190, 32, 30],
            [32, 186, 33, 31],
            [33, 180, 32, 34],
            [34, 185, 33, 30],
            [35, 227, 36, 39],
            [36, 196, 37, 35],
            [37, 195, 36, 38],
            [38, 199, 39, 37],
            [39, 225, 38, 35],
            [40, 231, 41, 44],
            [41, 192, 42, 40],
            [42, 191, 43, 41],
            [43, 197, 42, 44],
            [44, 229, 43, 40],
            [45, 235, 49, 46],
            [46, 188, 47, 45],
            [47, 187, 48, 46],
            [48, 193, 47, 49],
            [49, 233, 45, 48],
            [50, 239, 51, 54],
            [51, 182, 52, 50],
            [52, 181, 51, 53],
            [53, 189, 52, 54],
            [54, 237, 50, 53],
            [55, 221, 59, 56],
            [56, 198, 57, 55],
            [57, 184, 56, 58],
            [58, 183, 57, 59],
            [59, 222, 55, 58],
            [60, 65, 183, 61],
            [61, 62, 184, 60],
            [62, 61, 185, 63],
            [63, 64, 180, 62],
            [64, 63, 181, 65],
            [65, 60, 182, 64],
            [66, 71, 189, 67],
            [67, 68, 181, 66],
            [68, 67, 180, 69],
            [69, 70, 186, 68],
            [70, 69, 187, 71],
            [71, 66, 188, 70],
            [72, 77, 193, 73],
            [73, 74, 187, 72],
            [74, 73, 186, 75],
            [75, 76, 190, 74],
            [76, 75, 191, 77],
            [77, 72, 192, 76],
            [78, 83, 197, 79],
            [79, 80, 191, 78],
            [80, 79, 190, 81],
            [81, 82, 194, 80],
            [82, 81, 195, 83],
            [83, 78, 196, 82],
            [84, 89, 199, 85],
            [85, 86, 195, 84],
            [86, 85, 194, 87],
            [87, 88, 185, 86],
            [88, 87, 184, 89],
            [89, 84, 198, 88],
            [90, 95, 203, 91],
            [91, 92, 204, 90],
            [92, 91, 205, 93],
            [93, 94, 200, 92],
            [94, 93, 201, 95],
            [95, 90, 202, 94],
            [96, 101, 209, 97],
            [97, 98, 201, 96],
            [98, 97, 200, 99],
            [99, 100, 206, 98],
            [100, 99, 207, 101],
            [101, 96, 208, 100],
            [102, 107, 213, 103],
            [103, 104, 207, 102],
            [104, 103, 206, 105],
            [105, 106, 210, 104],
            [106, 105, 211, 107],
            [107, 102, 212, 106],
            [108, 113, 217, 109],
            [109, 110, 211, 108],
            [110, 109, 210, 111],
            [111, 112, 214, 110],
            [112, 111, 215, 113],
            [113, 108, 216, 112],
            [114, 119, 219, 115],
            [115, 116, 215, 114],
            [116, 115, 214, 117],
            [117, 118, 205, 116],
            [118, 117, 204, 119],
            [119, 114, 218, 118],
            [120, 125, 221, 121],
            [121, 122, 222, 120],
            [122, 121, 223, 123],
            [123, 124, 213, 122],
            [124, 123, 212, 125],
            [125, 120, 220, 124],
            [126, 131, 198, 127],
            [127, 128, 221, 126],
            [128, 127, 220, 129],
            [129, 130, 224, 128],
            [130, 129, 225, 131],
            [131, 126, 199, 130],
            [132, 137, 227, 133],
            [133, 134, 225, 132],
            [134, 133, 224, 135],
            [135, 136, 217, 134],
            [136, 135, 216, 137],
            [137, 132, 226, 136],
            [138, 143, 196, 139],
            [139, 140, 227, 138],
            [140, 139, 226, 141],
            [141, 142, 228, 140],
            [142, 141, 229, 143],
            [143, 138, 197, 142],
            [144, 149, 231, 145],
            [145, 146, 229, 144],
            [146, 145, 228, 147],
            [147, 148, 219, 146],
            [148, 147, 218, 149],
            [149, 144, 230, 148],
            [150, 155, 192, 151],
            [151, 152, 231, 150],
            [152, 151, 230, 153],
            [153, 154, 232, 152],
            [154, 153, 233, 155],
            [155, 150, 193, 154],
            [156, 161, 235, 157],
            [157, 158, 233, 156],
            [158, 157, 232, 159],
            [159, 160, 203, 158],
            [160, 159, 202, 161],
            [161, 156, 234, 160],
            [162, 167, 188, 163],
            [163, 164, 235, 162],
            [164, 163, 234, 165],
            [165, 166, 236, 164],
            [166, 165, 237, 167],
            [167, 162, 189, 166],
            [168, 173, 239, 169],
            [169, 170, 237, 168],
            [170, 169, 236, 171],
            [171, 172, 209, 170],
            [172, 171, 208, 173],
            [173, 168, 238, 172],
            [174, 179, 222, 175],
            [175, 176, 183, 174],
            [176, 175, 182, 177],
            [177, 178, 239, 176],
            [178, 177, 238, 179],
            [179, 174, 223, 178],
            [180, 33, 68, 63],
            [181, 52, 67, 64],
            [182, 51, 176, 65],
            [183, 58, 175, 60],
            [184, 57, 88, 61],
            [185, 34, 87, 62],
            [186, 32, 74, 69],
            [187, 47, 73, 70],
            [188, 46, 162, 71],
            [189, 53, 167, 66],
            [190, 31, 80, 75],
            [191, 42, 79, 76],
            [192, 41, 150, 77],
            [193, 48, 155, 72],
            [194, 30, 86, 81],
            [195, 37, 85, 82],
            [196, 36, 138, 83],
            [197, 43, 143, 78],
            [198, 56, 126, 89],
            [199, 38, 131, 84],
            [200, 0, 98, 93],
            [201, 7, 97, 94],
            [202, 6, 160, 95],
            [203, 13, 159, 90],
            [204, 12, 118, 91],
            [205, 1, 117, 92],
            [206, 4, 104, 99],
            [207, 27, 103, 100],
            [208, 26, 172, 101],
            [209, 8, 171, 96],
            [210, 3, 110, 105],
            [211, 22, 109, 106],
            [212, 21, 124, 107],
            [213, 28, 123, 102],
            [214, 2, 116, 111],
            [215, 17, 115, 112],
            [216, 16, 136, 113],
            [217, 23, 135, 108],
            [218, 11, 148, 119],
            [219, 18, 147, 114],
            [220, 20, 125, 128],
            [221, 55, 127, 120],
            [222, 59, 174, 121],
            [223, 29, 179, 122],
            [224, 24, 134, 129],
            [225, 39, 133, 130],
            [226, 15, 140, 137],
            [227, 35, 139, 132],
            [228, 19, 141, 146],
            [229, 44, 145, 142],
            [230, 10, 152, 149],
            [231, 40, 151, 144],
            [232, 14, 158, 153],
            [233, 49, 157, 154],
            [234, 5, 164, 161],
            [235, 45, 163, 156],
            [236, 9, 170, 165],
            [237, 54, 169, 166],
            [238, 25, 173, 178],
            [239, 50, 177, 168]
        ];
        private static readonly Vector3D[] _baseVertices = [
            new(-5.71840, 3.54670, -1.61640),
            new(-6.34670, 2.37220, -1.41080),
            new(-6.55090, 2.23560, -0.08560),
            new(-6.04800, 3.32500, 0.52810),
            new(-5.53380, 4.13590, -0.41800),
            new(-0.39430, 2.88180, -6.27270),
            new(-1.72440, 2.85710, -6.05370),
            new(-2.04150, 3.93100, -5.30510),
            new(-0.90860, 4.61770, -5.06330),
            new(0.10920, 3.97170, -5.66300),
            new(-3.96610, -3.65340, -4.32840),
            new(-4.98700, -3.00650, -3.73060),
            new(-5.09980, -1.79360, -4.30890),
            new(-4.15350, -1.69580, -5.26210),
            new(-3.45430, -2.84620, -5.27730),
            new(-4.77570, -3.73910, 3.33300),
            new(-5.47730, -2.58740, 3.34390),
            new(-6.09190, -2.46510, 2.15020),
            new(-5.77240, -3.54060, 1.40570),
            new(-4.95990, -4.32880, 2.13500),
            new(-1.69560, 2.74760, 6.11390),
            new(-2.51160, 3.53340, 5.38260),
            new(-3.64280, 2.84320, 5.13990),
            new(-3.52420, 1.63390, 5.72030),
            new(-2.32280, 1.57490, 6.32490),
            new(1.01010, 6.84650, 0.17810),
            new(-0.19600, 6.90290, -0.42140),
            new(-1.14330, 6.80570, 0.53070),
            new(-0.52400, 6.68440, 1.72100),
            new(0.80620, 6.70990, 1.50370),
            new(5.71400, -3.54450, 1.61530),
            new(5.52730, -4.12910, 0.41530),
            new(6.04100, -3.31730, -0.52860),
            new(6.54630, -2.23090, 0.08500),
            new(6.34270, -2.36950, 1.40990),
            new(-0.10580, -3.97210, 5.66260),
            new(0.91400, -4.61950, 5.06690),
            new(2.04630, -3.93330, 5.31310),
            new(1.72260, -2.85840, 6.05940),
            new(0.39380, -2.88350, 6.27980),
            new(-0.80600, -6.70760, -1.50370),
            new(0.52410, -6.68290, -1.72170),
            new(1.14070, -6.80200, -0.52900),
            new(0.19530, -6.90500, 0.42440),
            new(-1.00900, -6.84530, -0.17810),
            new(2.32130, -1.57770, -6.32060),
            new(3.52590, -1.63620, -5.71820),
            new(3.64160, -2.84850, -5.14270),
            new(2.51290, -3.53960, -5.39000),
            new(1.69580, -2.75380, -6.11910),
            new(4.96180, 4.32490, -2.13230),
            new(5.77830, 3.53760, -1.40670),
            new(6.09920, 2.46490, -2.15410),
            new(5.47970, 2.58840, -3.34500),
            new(4.77720, 3.73960, -3.33270),
            new(3.45500, 2.84620, 5.27050),
            new(4.15600, 1.69520, 5.25870),
            new(5.10460, 1.79540, 4.30780),
            new(4.98870, 3.00800, 3.73090),
            new(3.96980, 3.65810, 4.32790),
            new(6.22150, 2.29950, 1.89500),
            new(6.34330, 1.01180, 2.51090),
            new(6.67330, -0.09690, 1.73890),
            new(6.89040, 0.04920, 0.33060),
            new(6.77190, 1.30100, -0.26280),
            new(6.43230, 2.44350, 0.52920),
            new(5.76840, 0.32550, -3.77530),
            new(6.42550, 0.19560, -2.51020),
            new(6.54360, -1.05480, -1.91480),
            new(6.00770, -2.21070, -2.56910),
            new(5.37060, -2.08260, -3.79710),
            new(5.24610, -0.79580, -4.41070),
            new(2.99260, -5.02130, -3.66750),
            new(4.19490, -4.28700, -3.40930),
            new(4.83060, -4.41520, -2.17960),
            new(4.28650, -5.27550, -1.17340),
            new(3.11950, -5.98650, -1.42970),
            new(2.46170, -5.85810, -2.69360),
            new(1.73570, -6.34990, 2.07000),
            new(2.74110, -6.24340, 1.05620),
            new(3.90790, -5.53240, 1.31240),
            new(4.10270, -4.90790, 2.58480),
            new(3.12580, -5.01280, 3.56730),
            new(1.92230, -5.74310, 3.30760),
            new(3.73100, -1.82800, 5.51030),
            new(4.07020, -2.96900, 4.71620),
            new(5.04610, -2.86480, 3.73210),
            new(5.71200, -1.61620, 3.51370),
            new(5.38050, -0.50940, 4.28700),
            new(4.37450, -0.61340, 5.29970),
            new(-4.37750, 0.61490, -5.29610),
            new(-5.38260, 0.50790, -4.28300),
            new(-5.71240, 1.61690, -3.51110),
            new(-5.04500, 2.86530, -3.72990),
            new(-4.06820, 2.96490, -4.71470),
            new(-3.72760, 1.82510, -5.51000),
            new(-1.92570, 5.74040, -3.30420),
            new(-3.12910, 5.01000, -3.56180),
            new(-4.10480, 4.90990, -2.57920),
            new(-3.90850, 5.53380, -1.30680),
            new(-2.73900, 6.24320, -1.05540),
            new(-1.73150, 6.34890, -2.06880),
            new(-2.46390, 5.85530, 2.69230),
            new(-3.12290, 5.98580, 1.42790),
            new(-4.29040, 5.27600, 1.17780),
            new(-4.83540, 4.41300, 2.18080),
            new(-4.19420, 4.28580, 3.40810),
            new(-2.99060, 5.01780, 3.66790),
            new(-5.24670, 0.79800, 4.40770),
            new(-5.37380, 2.08430, 3.79110),
            new(-6.01420, 2.21020, 2.56490),
            new(-6.54730, 1.05420, 1.91190),
            new(-6.42410, -0.19500, 2.51070),
            new(-5.76610, -0.32650, 3.77520),
            new(-6.43110, -2.44060, -0.52990),
            new(-6.77150, -1.29650, 0.26110),
            new(-6.89370, -0.04700, -0.33280),
            new(-6.67710, 0.09470, -1.74050),
            new(-6.34610, -1.01240, -2.51140),
            new(-6.22140, -2.29970, -1.89740),
            new(1.50500, 4.09810, 5.34550),
            new(2.04800, 4.96050, 4.34030),
            new(1.20720, 5.77210, 3.58810),
            new(-0.20570, 5.74440, 3.81970),
            new(-0.73110, 4.90600, 4.79680),
            new(0.13370, 4.06950, 5.57140),
            new(2.46300, 0.60100, 6.41910),
            new(1.72060, 1.82500, 6.43030),
            new(0.34970, 1.79650, 6.65660),
            new(-0.31560, 0.54820, 6.87560),
            new(0.40590, -0.63910, 6.86310),
            new(1.81880, -0.61170, 6.63110),
            new(-2.25170, -3.08490, 5.75150),
            new(-1.71860, -1.92710, 6.40420),
            new(-2.44020, -0.74030, 6.41700),
            new(-3.71930, -0.67980, 5.77590),
            new(-4.23870, -1.80220, 5.14270),
            new(-3.49300, -3.02480, 5.12970),
            new(-0.57110, -5.79010, 3.71320),
            new(-1.65180, -5.09930, 4.34930),
            new(-2.89310, -5.04050, 3.72640),
            new(-3.09040, -5.66470, 2.45330),
            new(-2.03820, -6.33380, 1.83790),
            new(-0.75900, -6.39770, 2.47820),
            new(-2.98250, -5.95830, -1.80030),
            new(-3.20020, -6.10400, -0.39330),
            new(-4.25160, -5.43490, 0.21990),
            new(-5.11720, -4.59810, -0.55310),
            new(-4.90580, -4.45600, -1.91990),
            new(-3.82220, -5.14540, -2.55420),
            new(0.20560, -5.74570, -3.82230),
            new(-1.20750, -5.77070, -3.59100),
            new(-2.04650, -4.95820, -4.34510),
            new(-1.50320, -4.09670, -5.35100),
            new(-0.13130, -4.07570, -5.57330),
            new(0.73600, -4.90990, -4.79870),
            new(0.31510, -0.55340, -6.87440),
            new(-0.35070, -1.80190, -6.65680),
            new(-1.72230, -1.82310, -6.43430),
            new(-2.46520, -0.60010, -6.42070),
            new(-1.81850, 0.61060, -6.63110),
            new(-0.40580, 0.63590, -6.86150),
            new(3.71730, 0.68080, -5.77540),
            new(2.43790, 0.74100, -6.41480),
            new(1.71730, 1.92950, -6.40180),
            new(2.25260, 3.08590, -5.74960),
            new(3.49410, 3.02540, -5.12880),
            new(4.23870, 1.80250, -5.14240),
            new(3.09170, 5.66390, -2.45320),
            new(2.89410, 5.03890, -3.72650),
            new(1.65130, 5.10040, -4.34710),
            new(0.57020, 5.79070, -3.71030),
            new(0.76310, 6.39830, -2.47650),
            new(2.04110, 6.33460, -1.83670),
            new(3.82530, 5.14780, 2.55420),
            new(4.90740, 4.45900, 1.91690),
            new(5.11860, 4.60010, 0.55090),
            new(4.25030, 5.43740, -0.22000),
            new(3.20110, 6.10720, 0.39670),
            new(2.98370, 5.96090, 1.80330),
            new(6.80240, -1.06610, -0.52910),
            new(6.57660, 1.31140, -1.66150),
            new(5.89630, 3.60230, -0.07090),
            new(5.49490, 3.33110, 2.52990),
            new(5.74150, 0.74890, 3.76000),
            new(6.36910, -1.35850, 2.29300),
            new(5.72990, -3.38420, -1.83370),
            new(4.51810, -3.14410, -4.16960),
            new(4.26810, -0.56250, -5.40060),
            new(5.25890, 1.57360, -4.19630),
            new(4.63920, -5.10940, 0.18260),
            new(2.41980, -6.46160, -0.29940),
            new(1.10180, -6.20450, -2.83510),
            new(2.11040, -4.61290, -4.69170),
            new(5.03460, -3.85750, 2.73050),
            new(3.17810, -4.05450, 4.60270),
            new(0.76380, -5.52010, 4.08180),
            new(0.40400, -6.67580, 1.73070),
            new(3.72430, 0.53920, 5.79030),
            new(2.49660, -1.76830, 6.19360),
            new(-5.03480, 3.85980, -2.72870),
            new(-3.17580, 4.05300, -4.59710),
            new(-2.49480, 1.76650, -6.19310),
            new(-3.72640, -0.53700, -5.79010),
            new(-5.74310, -0.75120, -3.75850),
            new(-6.37250, 1.35810, -2.29080),
            new(-4.64300, 5.11170, -0.17830),
            new(-2.42020, 6.46280, 0.30140),
            new(-0.40100, 6.67510, -1.72920),
            new(-0.76520,  5.51870, -4.07760),
            new(-5.73680,  3.38440,  1.83310),
            new(-4.51900,  3.14180,  4.16740),
            new(-2.10610,  4.60910,  4.68840),
            new(-1.10270,  6.20340,  2.83290),
            new(-6.80670,  1.06760,  0.52530),
            new(-6.57320, -1.31130,  1.65830),
            new(-5.25800, -1.57360,  4.19570),
            new(-4.26980,  0.56400,  5.39930),
            new(-5.49470, -3.33010, -2.53080),
            new(-5.89430, -3.59960,  0.06960),
            new(-0.37200,  2.93570,  6.24140),
            new( 2.23520,  2.98440,  5.81460),
            new( 3.32900,  4.71270,  3.80030),
            new( 1.72750,  6.25850,  2.37010),
            new(-1.70970,  0.43640,  6.68250),
            new(-0.33510, -1.82270,  6.65880),
            new(-3.76470, -4.02310,  4.16990),
            new(-1.40170, -4.13930,  5.35180),
            new(-4.15950, -5.27530,  1.61890),
            new(-2.15890, -6.54860,  0.44830),
            new(-3.32510, -4.71030, -3.80150),
            new(-1.72590, -6.25540, -2.37180),
            new(-2.23470, -2.98480, -5.81940),
            new( 0.37250, -2.93990, -6.24430),
            new( 0.33370,  1.81980, -6.65560),
            new( 1.70890, -0.43690, -6.67910),
            new( 1.40300,  4.14040, -5.35000),
            new( 3.76640,  4.02360, -4.16930),
            new( 2.16110,  6.55020, -0.44770),
            new( 4.16100,  5.27410, -1.61870),
        ];

        public C240(double size, Vector3D center, EulerAngles rotationAngles)
            : base(size, center, rotationAngles)
        {
            _vertices = GenerateVertices(center, size, rotationAngles);

            _outerR = 0;
            _innerR = double.MaxValue;

            foreach (var v in _vertices)
            {
                var r = Vector3D.Distance(v, center);

                if (r > _outerR)
                    _outerR = r;

                if (r < _innerR)
                    _innerR = r;
            }
        }

        private static Vector3D[] GenerateVertices(Vector3D center, double size, EulerAngles rotationAngles)
        {
            var rotationMatrix = rotationAngles.CreateRotationMatrix();
            var result = new Vector3D[_baseVertices.Length];

            for (int i = 0; i < _baseVertices.Length; i++)
            {
                var scaled = _baseVertices[i] * size;
                var rotated = Vector3D.Transform(scaled, rotationMatrix);
                result[i] = rotated + center;
            }

            return result;
        }
    }
}
